{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCKA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAHoB,SAAS,sBAAsB,CAAC,gB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAG1C,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAO,AAef,SAAmB,CAAG,EAGpB,IAAK,IAFD,EAAS,CAAG,CAAC,EAAE,CAEV,EAAI,EAAG,EAAI,EAAI,MAAM,CAAE,IAC1B,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAE,CAAC,WAAW,IAC/B,CAAA,GAAU,GADZ,EAGA,GAAU,CAAG,CAAC,EAAE,CAGlB,OAAO,CACT,EA1ByB,EAAM,IAAI,CAAC,EAAE,CAAC,WAAW,GAAK,EAAM,IAAI,CAAC,KAAK,CAAC,IAEtE,EAAM,YAAY,CAAC,cAAe,GAAQ,MAAA,CAAL,IAErC,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAClC,EAAM,WAAW,CAAG,EAIpB,AAFkB,EAAM,UAAU,CAExB,YAAY,CAAC,EAAO,EAChC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputFields = document.getElementsByClassName(\"field-text\");\nvar inputsArr = _to_consumable_array(inputFields);\ninputsArr.forEach(function(input) {\n    var text = addSpaces(input.name[0].toUpperCase() + input.name.slice(1));\n    input.setAttribute(\"placeholder\", \"\".concat(text));\n    var label = document.createElement(\"label\");\n    label.className = \"field-label\";\n    label.setAttribute(\"for\", input.id);\n    label.textContent = text;\n    var container = input.parentNode;\n    container.insertBefore(label, input);\n});\nfunction addSpaces(str) {\n    var result = str[0];\n    for(var i = 1; i < str.length; i++){\n        if (str[i] === str[i].toUpperCase()) result += \" \";\n        result += str[i];\n    }\n    return result;\n}\n\n//# sourceMappingURL=index.51ac7eee.js.map\n","'use strict';\n\nconst inputFields = document.getElementsByClassName('field-text');\nconst inputsArr = [...inputFields];\n\ninputsArr.forEach((input) => {\n  const text = addSpaces(input.name[0].toUpperCase() + input.name.slice(1));\n\n  input.setAttribute('placeholder', `${text}`);\n\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.setAttribute('for', input.id);\n  label.textContent = text;\n\n  const container = input.parentNode;\n\n  container.insertBefore(label, input);\n});\n\nfunction addSpaces(str) {\n  let result = str[0];\n\n  for (let i = 1; i < str.length; i++) {\n    if (str[i] === str[i].toUpperCase()) {\n      result += ' ';\n    }\n    result += str[i];\n  }\n\n  return result;\n}\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","inputsArr","_array_without_holes","isArray","document","getElementsByClassName","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","input","text","addSpaces","str","result","toUpperCase","setAttribute","concat","label","createElement","className","id","textContent","container","parentNode","insertBefore"],"version":3,"file":"index.51ac7eee.js.map"}